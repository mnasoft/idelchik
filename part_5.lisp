;;;; part_5.lisp

(in-package #:idelchik)

(defparameter part_5_doc
  "Сопротивление при течении с плавным измеиением скорости 
  (коэффициенты сопротивления диффузоов, конфузоров и дрyrих переходных участков)")

(defun idl-5-5-dzeta-rash(d1 d0 l)
  (let* (
	 (alfa_r (* 2.0 (atan (/ (- d1 d0) 2.0 l))))
	 (n	   (/ (* d1 d1) (* d0 d0))))
    (* 3.2
       1.0
       (expt (tan (* alfa_r 0.5)) 1.25)
       (expt (- 1.0 (/ 1.0 n)) 2.0))))

(defun idl-5-5-dzeta( d1 d0 l mikro)
  "Диффузор
d1 - диаметр на выходе
d0 - диаметр на входе
l  - длина перехода
(idl-5-5-dzeta 0.079 0.049 0.060 (* 0.001 0.02))
Потери определяются по скорости на входе
"
  (+
    (idl-5-5-dzeta-rash d1 d0 l)
    (idl-5-6-dzeta-tr d1 d0 l mikro)))


(defun idl-5-6-dzeta-tr(d1 d0 l mikro)
  (let*
      ((alfa_r (* 2.0 (atan (/ (- d1 d0) 2.0 l))))
       (n (/ (* d1 d1) (* d0 d0)))
       (delta  (/ mikro d1))
       (lam    (idl-2-6-lambda delta)))
    (/ (* lam (- 1.0 (/ 1.0 (* n n)))  ) 8.0 (sin (* 0.5 alfa_r)))))


(defun Idl-5-23-1-dzeta	(D1 D0 l mikro)
  "Конфузор D1 - вход   [м]
            D0 - выход  [м]
            l  - длина  [м]
            mikro - шероховатость, [м]
Потери определяются по скорости на выходе
(Idl-5-23-1-dzeta 0.079 0.049 0.060 (* 0.001 0.02)) "
  (let* ((alfa_r (* 2.0 (atan (/ (- D1 D0) 2.0 l))))
	 (n0 (/ (* D0 D0) (* D1 D1)))
	 (dzeta
	  (*
	   (+
	    (* n0 n0 n0 n0 -0.0125)
	    (* n0 n0 n0 0.0224)
	    (* n0 n0 -0.00723)
	    (* n0 0.00444)
	    -0.00745
	    )
	   (+ (* alfa_r alfa_r alfa_r) (* alfa_r alfa_r pi -2.0) (* alfa_r -10.0)))))
    (+ dzeta (idl-5-6-dzeta-tr d1 d0 l mikro))))


(defparameter ζд_alfa
  '(3 4 6 8 10 12 14 16 20 30 45 60 90 120 180))

2
(defparameter
    ζд_n2
    '((0.5e5 0.148 0.135 0.121 0.112 0.107 0.109 0.120 0.141 0.191 0.315 0.331 0.326 0.315 0.308 0.298) 
      (1.0e5 0.120 0.106 0.090 0.083 0.080 0.088 0.102 0.122 0.196 0.298 0.297 0.286 0.283 0.279 0.276) 
      (2.0e5 0.093 0.082 0.070 0.068 0.062 0.062 0.063 0.073 0.120 0.229 0.279 0.268 0.268 0.265 0.263) 
      (4.0e5 0.079 0.068 0.056 0.048 0.048 0.048 О.О51 0.051 0.068 0.120 0.271 0.272 0.272 0.268 0.268)))

4
(defparameter
    ζд_n4
    '((0.5e5 0.197 0.180 0.165 0.151 0.157 0.174 0.197 0.225 0.298 0.461 0.606 0.680 0.643 0.630 0.615) 
      (1.0e5 0.154 0.141 0.126 0.119 0.120 0.131 0.155 0.183 0.262 0.479 0.680 0.628 0.600 0.593 0.585) 
      (2.0e5 0.120 0.112 0.101 0.096 0.096 0.107 0.120 0.146 0.180 0.360 0.548 0.586 0.585 0.580 0.567) 
      (4.0e5 0.101 0.091 0.085 0.079 0.082 0.090 0.107 0.124 0.172 0.292 0.462 0.562 0.582 0.577 0.567) 
      (6.0e5 0.101 0.091 0.085 0.089 0.080 0.107 0.135 0.169 0.240 0.382 0.506 0.560 0.582 0.577 0.567)))

6
(defparameter
    ζд_n6
    '((0.5e5 0.182 0.170 0.168 0.168 0.179 0.200 0.240 0.268 0.330 0.482 0.655 0.766 0.742 0.730 0.722) 
      (1.0e5 0.153 0.144 0.131 0.126 0.132 0.159 0.193 0.218 0.286 0.488 0.680 0.755 0.731 0.720 0.707) 
      (2.0e5 0.129 0.118 0.109 0.101 0.101 0.118 0.151 0.185 0.280 0.440 0.895 0.700 0.710 0.708 0.690) 
      (4.0e5 0.106 0.095 0.090 0.084 0.087 0.104 0.151 0.160 0.224 0.360 0.588 0.660 0.696 0.695 0.680) 
      (6.0e5 0.092 0.090 0.080 0.079 0.080 0.098 0.137 0.160 0.286 0.456 0.600 0.690 0.707 0.700 0.695)))

10
(defparameter
    ζд_n10
    '((0.5e5 0.195 0.181 0.184 0.190 0.200 0.227 0.256 0.290 0.380 0.585 0.760 0.800 0.834 0.840 0.827) 
      (1.0e5 0.160 0.156 0.155 0.156 0.162 0.184 0.212 0.240 0.332 0.572 0.812 0.800 0.820 0.820 0.815) 
      (2.0e5 0.123 0.120 0.120 0.123 0.134 0.151 0.167 0.195 0.240 0.426 0.760 0.800 0.806 0.807 0.808) 
      (4.0e5 0.100 0.097 0.097 0.100 0.106 0.128 0.160 0.195 0.254 0.407 0.605 0.735 0.804 0.805 0.809) 
      (6.0e5 0.085 0.084 0.084 0.085 О.О86 0.114 0.160 0.212 0.332 0.520 0.600 0.760 0.825 0.840 0.825)))

16
(defparameter
    ζд_n16
    '((0.5e5 0.179 0.174 0.176 0.185 0.196 0.224 0.270 0.306 0.378 0.600 0.840 0.880 0.880 0.880 0.880) 
      (1.0e5 0.148 0.146 0.147 0.147 0.151 0.179 0.233 0.275 0.340 0.600 0.840 0.905 0.877 0.876 0.876)
      (2.0e5 0.118 0.120 0.120 0.120 0.120 0.140 0.176 0.208 0.280 0.520 0.760 0.868 0.868 0.868 0.868)
      (4.0e5 0.102 0.098 0.095 0.094 0.095 0.118 0.160 0.191 0.264 0.480 0.700 0.778 0.847 0.868 0.869)
      (6.0e5 0.094 0.085 0.084 0.085 0.094 0.118 0.160 0.212 0.342 0.560 0.720 0.790 0.853 0.874 0.886)))

(defun ζд-points (n alfa Re_ζ_lst)
  (let ((Re (mapcar #'(lambda (el) (car el)) Re_ζ_lst))
	(ζ  (mapcar #'(lambda (el) (cdr el)) Re_ζ_lst))
	(rez nil))
;    (mapcar #'(lambda(a) (append a rez))
     (mapcar
     #'(lambda (el1 el2)
	 (mapcar
	  #'(lambda (ell)
	      (list n el1 ell))
	  el2))
     Re ζ))
;  rez)
)

(ζд-points 2 ζд_alfa ζд_n16)

(append '(1 2 3) '(3 4 5))
